<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snap on 夜行人</title>
    <link>http://wwj718.github.io/tags/snap/</link>
    <description>Recent content in Snap on 夜行人</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://wwj718.github.io/tags/snap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Snap! 中的 Spline 库</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-spline/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-spline/</guid>
      <description>前言 对 3D 环境的最初兴趣来自 Croquet 团队的这篇论文. 从 Alan Kay 那里学到这样的一种视角来看待交互式图形计算: 桌面隐喻/GUI 的力量是心理层面的, 它们为用户</description>
    </item>
    
    <item>
      <title>Snap! 中的 iframe 库</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-iframe/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-iframe/</guid>
      <description>前言 将另一个 HTML 页面嵌入到当前页面中 &amp;ndash; iframe 我一直渴望拥有一个 Snap! iframe 库, 这个库最好足够通用, 它能够将各种各样的互联网资源通过 iframe 引入到 Snap! 里, 并与 Snap! 进行</description>
    </item>
    
    <item>
      <title>Bringing GPT-4o to Snap!</title>
      <link>http://wwj718.github.io/post/programming/snap-gpt-4o-en/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/programming/snap-gpt-4o-en/</guid>
      <description>中文版本 Preface I previously wrote an article discussing the AI assistant in graphical programming environment. The experiment at that time showed some interesting possibilities, but it was not practical. With the release of GPT-4o, especially the improvement of multimodal capabilities (audio stream and video stream APIs will be released soon), the AI assistant (or tutor) in graphical programming environment has become truly attractive: you can communicate with</description>
    </item>
    
    <item>
      <title>Snap! 中的 GPT-4o</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-gpt-4o/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-gpt-4o/</guid>
      <description>English version 前言 之前写过一篇文章讨论图形化编程中的 AI 助手 , 当时的实验展示了一些有趣的可能性, 但实用性并不高。 随着 GPT-4o 的发布, 尤其是多模态能力的提升(不</description>
    </item>
    
    <item>
      <title>Snap! 中的硬件模拟器</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-simulate-iot/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-simulate-iot/</guid>
      <description>前言 @Bingo 昨晚提到: 想做一个虚拟仿真项目, 用 Python 测试了一下可行性, 感觉用 Snap! 实现是否更简单? @Bingo 目前使用的是 wokwi/avr8js, wokwi/avr8js 使用 wokwi-elements 来呈现硬件设备的外观(基于 SVG</description>
    </item>
    
    <item>
      <title>Snap! 中的 Python 解释器</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-python-interpreter/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-python-interpreter/</guid>
      <description>前言 Snap! 的 JavaScript function 简单, 灵活且强大, 我想模仿它构建 Python function。 我们之前在这篇文章里, 基于 CodeLab Adapter 构建了一个 Python function, 但我一直更想要一个除了浏览器之外</description>
    </item>
    
    <item>
      <title>在 Snap! 中使用 mediapipe 库</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-mediapipe-js/</link>
      <pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-mediapipe-js/</guid>
      <description>介绍 mediapipe MediaPipe 提供了一套库和工具，供用户在应用程序中快速应用人工智能 (AI) 和机器学习 (ML) 技术 &amp;ndash; Github/MediaPipe 这些灵活的工具构建在 TensorFlow Lite 之上 &amp;ndash; mediapipe homepage Mediapipe 提供了一系列预训练的</description>
    </item>
    
    <item>
      <title>调试 Snap! 程序</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/debug-snap-promgram/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/debug-snap-promgram/</guid>
      <description>前言 调试比编写程序要困难两倍。如果你在编程时使出了所有聪明，那你要如何调试它呢？ &amp;ndash; 《The Elements of Programming Style》 调试功能是 Snap! 相比于 Scratch 的最大改进之</description>
    </item>
    
    <item>
      <title>Snap! 中的嵌套精灵</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-nesting-sprites/</link>
      <pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-nesting-sprites/</guid>
      <description>有时需要制作一种可以整体移动, 其中的部件又可以单独控制的 &amp;ldquo;超级精灵&amp;rdquo;。 典型的例子是人的身体: 由躯干、四肢和头部组成。</description>
    </item>
    
    <item>
      <title>发布 Snap! 国内版本</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/deploy-local-version-of-snap/</link>
      <pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/deploy-local-version-of-snap/</guid>
      <description>前言 我是 Snap! 的忠实用户。 之前围绕它写过不少文章。 除了方便我自己使用, 在国内部署 Snap! 的另一个动机是: 许多 MicroBlocks 中文用户期待使用 Snap! 作为 MicroBlocks 的上位机。 开始使</description>
    </item>
    
    <item>
      <title>介绍 Dynatalk</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/introducing-dynatalk/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/introducing-dynatalk/</guid>
      <description>Dynatalk 致力于对象之间的交流, 尤其关心不同语言/环境之间的互操作。 &amp;ndash; Dynatalk Make it work, make it correct, make it fast, make it cheap &amp;ndash; Alan Kay 前言 为什么制作这样一个东西? 我喜欢在 Squeak 进行探索</description>
    </item>
    
    <item>
      <title>制作一根属于你自己的魔杖🪄</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/microblocks-snap-wand/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/microblocks-snap-wand/</guid>
      <description>前言 Jackson 资助的两次美国之行, 都对我产生了深刻影响。 第一次是参加 Open edX 大会。 之后拜访了 MIT Media Lab 、The Clubhouse Network, 途中还去了趟洛杉矶环球影城。 第二次是参加 C</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: 动态添加 Snap! 造型</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-add-costume-dynamically/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-add-costume-dynamically/</guid>
      <description>前言 由于 Snap! 出色的可理解性和强大的灵活性/可扩展性, 我们的合作伙伴决定在 Snap! 投入资源。 DynaLab 正在为合作伙伴英荔构建增强版的 Snap! , 我们将 Scratch 社区最强大的一</description>
    </item>
    
    <item>
      <title>将基于 Scratch Link 的插件迁移到 Snap!</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/scratch-link-extensions-to-snap/</link>
      <pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/scratch-link-extensions-to-snap/</guid>
      <description>前言 近期需要把 Scratch 的一些蓝牙(BLE)插件迁移到 Snap! 里。 &amp;ndash; Snap! 蓝牙驱动库 虽然新的 BLE 设备喜欢采用 Web Bluetooth API(诸如 microbit more), 但依然有许多 BLE 设备是通过 Scratch Link 接入</description>
    </item>
    
    <item>
      <title>Snap! websocket 驱动库</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-websocket-prims/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-websocket-prims/</guid>
      <description>前言 在上一篇文章(Snap! 蓝牙驱动库)中, 我们记录了如何通过构建 BLE echo client, 得到通用的 BLE primitives。 Snap 与外部系统的交互, 就消息传递层面</description>
    </item>
    
    <item>
      <title>Snap! 蓝牙驱动库</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-ble-library/</link>
      <pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-ble-library/</guid>
      <description>编程的未来可能是大语言模型与个人计算环境的结合。 前言 近期需要把 Scratch 的一些蓝牙(BLE)插件迁移到 Snap! 里. 思路 做这件事有两种方法。 尽可能在 JavaScript 做事情</description>
    </item>
    
    <item>
      <title>图形化编程中的 AI 助手</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-ai-assistant/</link>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-ai-assistant/</guid>
      <description>前言 近期尝试将 AI 助手(ChatGPT)引入图形化编程环境。 OpenAI 介绍说, ChatGPT 背后的模型吃下了大量代码, 以至于十分擅长 Python、JavaScri</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: Python function(CodeLab Adapter版)</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-python-function/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-python-function/</guid>
      <description>制造伟大的、可成长的系统的关键是设计出模块之间的沟通机制，而不是关于内部属性和行为应该是什么。 &amp;ndash; Alan Kay 前言 .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:&#34;Font Awesome 5 Free&#34;,FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:&#39;\f071&#39;}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:&#39;\f05a&#39;}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:&#39;\f06a&#39;}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: 从 Scratch 进入 Snap! 的时机</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/from-scratch-to-snap/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/from-scratch-to-snap/</guid>
      <description>前言 低门槛、宽围墙、高天花板 &amp;ndash; 《终身幼儿园》 如果你是一位编程新手, Scratch 或许是最好的选择。 Scratch 拥有庞大的社区、友好的社区文化, 以及丰富而优质的学习</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: 将 Snap! 用作个人计算环境</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-personal-computing/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-personal-computing/</guid>
      <description>看待编程的视角 个人计算社区(一个观念社区而非实际社区)和主流软件领域的分歧是观念层面的, 技术差异只是观念差异的结果。主流领域认为编程是给计算</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: JavaScript function</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-javascript-function/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-javascript-function/</guid>
      <description>让简单的事情保持简单，让困难的事情变得可能 &amp;ndash; Alan Kay 前言 和 Scratch 3.0 一样, Snap! 也基于 JavaScript 构建，运行在浏览器中。 由于浏览器正在成为新的操作系统, 新的能力层出</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: MicroBlocks 插件</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-microblocks/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-microblocks/</guid>
      <description>前言 本文是在 Snap! 中使用 MicroBlocks 插件的笔记。 如果你之前有在 CodeLab Scratch 中使用 MicroBlocks 插件的经验， 这些经验都可以迁移到 Snap! 里。 本文与之前介绍 Scratch MicroBlocks 插件的文章基本相同: 在 MicroBlocks</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: MQTT 插件</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-mqtt/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-mqtt/</guid>
      <description>前言 本文是在 Snap! 中使用 MQTT 插件的笔记。 对 Snap! 不了解的读者，推荐 @angilent 的图形编程工具 Snap! 初探 Snap! 的 MQTT 插件 Snap! 内置了 MQTT 插件: 有了 MQTT 插件，我们就可以在 Snap! 与其他平台</description>
    </item>
    
    <item>
      <title>Snap! 使用笔记: 探索数据</title>
      <link>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-explore-data/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E7%BC%96%E7%A8%8B/snap-explore-data/</guid>
      <description>前言 Snap! 是出色的个人计算环境。 本文是在 Snap! 中探索数据的笔记。 之前一度喜欢在 Jupyterlab 中探索数据，因其出色的交互性。 Snap! 拥有更强的交互性, 数据几乎触手可及,</description>
    </item>
    
  </channel>
</rss>
