<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> django on 夜行人</title>
    <link>http://wwj718.github.io/tags/django/</link>
    <description>Recent content in  django on 夜行人</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://wwj718.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>以最佳实践开始你的Django项目</title>
      <link>http://wwj718.github.io/post/%E6%9E%B6%E6%9E%84/cookiecutter-django/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%9E%B6%E6%9E%84/cookiecutter-django/</guid>
      <description>“How long will it take to fix that?” One person, who’d been at the company for years, said, “Three months.” A new person, who’d just come from a world of rapidly provisioned cloud microservices, said, “Three m</description>
    </item>
    
    <item>
      <title>django源码阅读笔记</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-source-code-explore-note/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-source-code-explore-note/</guid>
      <description>Open edX的后端采用Django来写，Django是一个大而全的web框架，许多地方和Rails相似 Open edX对Django框架做了大量的改造，</description>
    </item>
    
    <item>
      <title>使用django-rest-framework建立RESTful风格的api</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-rest-framework-1/</link>
      <pubDate>Sun, 10 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-rest-framework-1/</guid>
      <description>##背景 django-rest-framework的文档也看过好几回了。 由于没在实际项目中使用过，真是边看边忘。 backbone.js/an</description>
    </item>
    
    <item>
      <title>django测试</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-test/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-test/</guid>
      <description>在单元测试方面，Django继承python的unittest.TestCase实现了自己的django.test.TestCase，编写测</description>
    </item>
    
    <item>
      <title>一些django工具笔记</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-tools/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-tools/</guid>
      <description>##django-debug-toolbar ###关于 A configurable set of panels that display various debug information about the current request/response. django调试不二神器 ###配置 0.10.0版的配置，edx可用 1 2 3 4 5 6 7 8 9 10 11 12 :::text DEBUG_TOOLBAR_PANELS = ( &amp;#39;debug_toolbar.panels.version.VersionDebugPanel&amp;#39;,</description>
    </item>
    
    <item>
      <title>django笔记之fixtures</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/use-fixtures/</link>
      <pubDate>Fri, 30 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/use-fixtures/</guid>
      <description>主要参考官方文档 ###为何用它 Providing initial data for models ###Where Django finds fixture files By default, Django looks in the fixtures directory inside each app for fixtures. You can set the FIXTURE_DIRS setting to a list of additional directories where Django should look. ###相关指令 python manage.py loaddata APPNAME python manage.py dumpdata APPNAME #</description>
    </item>
    
    <item>
      <title>django笔记之Signals</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-signals/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-signals/</guid>
      <description>###Signals是什么 为了回答这个问题，我们先来看下django官网对它的描述： Django includes a “signal dispatcher” which helps allow decoupled applications get notified</description>
    </item>
    
    <item>
      <title>django笔记之用户系统</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-user/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-user/</guid>
      <description>##内容摘要 django-userena profiles 验证码 短信认证功能 邮件认证功能 权限管理 ###参考资料 关于django-userena的profiles可以参考以下资料 ###django-userena ###profiles #</description>
    </item>
    
    <item>
      <title>django笔记之项目布局</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-begin/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-begin/</guid>
      <description>##内容摘要 django最佳实践 使用CDN 布局实例（托管在github上，大家可以直接使用，也欢迎fork） 一个好的项目布局，能让项目结构更</description>
    </item>
    
    <item>
      <title>django笔记之Generic views</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-generic-views/</link>
      <pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-generic-views/</guid>
      <description>为何要使用通用视图呢，一步步地定义url，写函数取数据，渲染模板不也能完成任务么？仅仅因为这些函数比较高级，我们就得学，为了证明自己djan</description>
    </item>
    
    <item>
      <title>django笔记之富文本编辑器</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-wysiwyg/</link>
      <pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-wysiwyg/</guid>
      <description>个人而言我更喜欢markdown，django中配置使用markdown很简单。一两分钟的功夫而已。就不在这里说了。 对于普通用户，还是更喜欢</description>
    </item>
    
    <item>
      <title>django笔记之permalink函数</title>
      <link>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-permalink/</link>
      <pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://wwj718.github.io/post/%E6%8A%80%E6%9C%AF/django-permalink/</guid>
      <description>为了让项目更好维护，应当尽量减少硬编码，使用permalink能减少url硬编码。我们直接看下它的源码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def</description>
    </item>
    
  </channel>
</rss>
